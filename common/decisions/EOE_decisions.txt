decision_EOE_habitat_repairing = {
	owned_planets_only = yes
	potential = {
		is_planet_class = pc_habitat
		has_modifier = EOE_broken_habitat
	}
	prerequisites = { tech_habitat_1 }
	show_tech_unlock_if = {
		has_origin = origin_protoss_shattered_ring
	}
	enactment_time = 180
	resources = {
		category = decisions
		cost = {
			influence = 25
			alloys = 750
		}
	}
	effect = {
		remove_modifier = EOE_broken_habitat
		add_deposit = d_EOE_mining_station
	}
	ai_weight = {
		weight = 1000
	}
}

decision_EOE_produce_steel_type_pokemon = {
	owned_planets_only = yes
	potential = {
		owner = {
			has_valid_civic = civic_EOE_steel_type_trainer
		}
		
	}
	allow = {
		custom_tooltip = {
			fail_text = EOE_steel_type_pokemon_produce_cooldown  #building
			NOT = { has_planet_flag = EOE_steel_type_pokemon_produce_cooldown }
		}
	}
	#Getting rid of this for the time being as it's still too easy to cheese it via the edict.
	#enactment_time = 90
	resources = {
		category = decisions
		cost = {
			minerals = 1200
		}
	}
	
	effect = {
			create_pop = {species = event_target:EOE_steelmons}
			create_pop = {species = event_target:EOE_steelmons}
			create_pop = {species = event_target:EOE_steelmons}
		
		add_modifier = {
				modifier = EOE_steel_type_pokemon_produce_cooldown_modifier days = 1080
			}
		set_timed_planet_flag = {
			flag = EOE_steel_type_pokemon_produce_cooldown
			days = 1080
		} 
	}
	ai_weight = {
		weight = 1000 #unfortunately this still doesn't make the AI actually use this. More research is needed as to why, or how to make them use it.
	}
}

decision_EOE_evolution_planning = {
	owned_planets_only = yes
	icon = decision_unity_symbol
	potential = {
		owner = {
			has_valid_civic = civic_EOE_evolution_planning
		}
		has_building = building_EOE_evolution_planning_office
	}
	resources = {
		category = decisions
		cost = {
			influence = 40
		}
	}
	effect = {
		custom_tooltip = decision_EOE_evolution_effects
		hidden_effect = {
			planet_event = {
				id = EOE_building.3
			}
		}	
	}
	ai_weight = {
		weight = 1000
	}
}
# decision_EOE_assimilate = {
# 	owned_planets_only = yes
# 	potential = {
# 		owner = {
# 			has_country_flag = eoe_country
# 		}
# 		always = no
# 	}
# 	enactment_time = 30
# 	effect = { 
# 		hidden_effect = {
# 			every_owned_pop = {
# 				limit = {
# 					NOT = { is_same_species = owner_main_species }
# 					species = {
# 						is_robotic = no
# 					}
# 					NOT = {
# 						AND = {
# 							has_trait = trait_syncretic_proles
# 							has_trait = trait_pokeball_adaptability
# 						}
# 					}
# 				}
# 				kill_pop = yes
# 				generate_cyborg_treats = yes
# 				prev = {
# 					create_pop = {
# 						species = owner_main_species
# 					}
# 				}
# 			}
# 		}
		
# 	}
# }
